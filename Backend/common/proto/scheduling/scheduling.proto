syntax = "proto3";

option go_package = "common/scheduling_pb";
package scheduling_pb;


service SchedulingService{
  rpc GenerateSchedule(SchedulingParameters) returns(Schedule) {}
}


enum ApparatusType{
  Floor = 0;
  PommelHorse = 1;
  StillRings = 2;
  Vault = 3;
  ParallelBars = 4;
  HorizontalBar = 5;
  BalanceBeam = 6;
  UnevenBars = 7;
}


message AgeCategory{
  string id = 1;
  string name = 2;
  int32 minAge = 3;
  int32 maxAge = 4;
}


message ContestantInfo{
  int32 contestantCompId = 1;
  string name = 2;
  int32 teamNumber = 3;
  string organization = 4;
  string ageCategory = 5;
  string location = 6;
}


message ScheduleSlot{
  int32 session = 1;
  ApparatusType startingApparatus = 2;
  ContestantInfo contestantInfo = 3;
}

message Schedule{
  repeated ScheduleSlot slots = 1;
}

message Apparatus{
  string id = 1;
  ApparatusType type = 2;
}

message SchedulingParameters{
    string  id = 1;
    string  competitionId = 2;
    int64  startTime = 3;
    int64  endTime = 4;
    bool  warmupRoomAvailable = 5;
    int32  generalWarmupTime = 6;
    int32  warmupTime = 7;
    int32  warmupsPerApparatus = 8;
    int32  contestantNumPerApparatus = 9;
    int32  executionTime = 10;
    int32  apparatusRotationTime = 11;
    int32  medalCeremonyAfterOneSessionTime = 12;
    int32  finalMedalCeremonyTime = 13;
    bool halfApparatusPerSessionMode = 14;
    repeated  Apparatus apparatusOrder = 15;
}
